<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 技术哲思 - 技术思考在此处停留</title>
    <link>https://flike.github.io/post/</link>
    <description>Recent content in Posts on 技术哲思 - 技术思考在此处停留</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>技术哲思</copyright>
    <lastBuildDate>Sun, 07 Oct 2018 18:37:51 +0800</lastBuildDate>
    
	<atom:link href="https://flike.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Braft的日志存储引擎实现分析</title>
      <link>https://flike.github.io/post/braft_storage/</link>
      <pubDate>Sun, 07 Oct 2018 18:37:51 +0800</pubDate>
      
      <guid>https://flike.github.io/post/braft_storage/</guid>
      <description>1.架构设计 1.1 函数接口说明 日志存储引擎是用于存储raft lib产生的日志。提供的接口如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description>
    </item>
    
    <item>
      <title>从零开始开发一个单机存储引擎</title>
      <link>https://flike.github.io/post/storage_arch/</link>
      <pubDate>Sun, 07 Oct 2018 14:43:53 +0800</pubDate>
      
      <guid>https://flike.github.io/post/storage_arch/</guid>
      <description>1 VDL Logstore概述 如何设计存储引擎，使得读写接口的性能足够高，如何保证在机器宕机时，存储引擎能够将已存储的数据恢复到一个一致性状态。如</description>
    </item>
    
    <item>
      <title>Raft的PreVote实现机制</title>
      <link>https://flike.github.io/post/raft_prevote/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://flike.github.io/post/raft_prevote/</guid>
      <description>1. 背景 在Basic Raft算法中，当一个Follower与其他节点网络隔离，如下图所示： Follower_2在electionTimeout</description>
    </item>
    
  </channel>
</rss>